//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace TZHSWEET.Entity
{
    public partial class BaseManageEntities : ObjectContext
    {
        public const string ConnectionString = "name=BaseManageEntities";
        public const string ContainerName = "BaseManageEntities";
    
        #region Constructors
    
        public BaseManageEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public BaseManageEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public BaseManageEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // 创建代理需要使用 ProxyDataContractResolver 和
            // 可允许延迟加载，这可以在序列化期间展开加载图。
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet 属性
    
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get { return _sysdiagrams  ?? (_sysdiagrams = CreateObjectSet<sysdiagram>("sysdiagrams")); }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        public ObjectSet<tbDepartment> tbDepartments
        {
            get { return _tbDepartments  ?? (_tbDepartments = CreateObjectSet<tbDepartment>("tbDepartments")); }
        }
        private ObjectSet<tbDepartment> _tbDepartments;
    
        public ObjectSet<tbFavorite> tbFavorites
        {
            get { return _tbFavorites  ?? (_tbFavorites = CreateObjectSet<tbFavorite>("tbFavorites")); }
        }
        private ObjectSet<tbFavorite> _tbFavorites;
    
        public ObjectSet<tbModule> tbModules
        {
            get { return _tbModules  ?? (_tbModules = CreateObjectSet<tbModule>("tbModules")); }
        }
        private ObjectSet<tbModule> _tbModules;
    
        public ObjectSet<tbModulePermission> tbModulePermissions
        {
            get { return _tbModulePermissions  ?? (_tbModulePermissions = CreateObjectSet<tbModulePermission>("tbModulePermissions")); }
        }
        private ObjectSet<tbModulePermission> _tbModulePermissions;
    
        public ObjectSet<tbRole> tbRoles
        {
            get { return _tbRoles  ?? (_tbRoles = CreateObjectSet<tbRole>("tbRoles")); }
        }
        private ObjectSet<tbRole> _tbRoles;
    
        public ObjectSet<tbRolePermission> tbRolePermissions
        {
            get { return _tbRolePermissions  ?? (_tbRolePermissions = CreateObjectSet<tbRolePermission>("tbRolePermissions")); }
        }
        private ObjectSet<tbRolePermission> _tbRolePermissions;
    
        public ObjectSet<tbUser> tbUsers
        {
            get { return _tbUsers  ?? (_tbUsers = CreateObjectSet<tbUser>("tbUsers")); }
        }
        private ObjectSet<tbUser> _tbUsers;
    
        public ObjectSet<tbUserRole> tbUserRoles
        {
            get { return _tbUserRoles  ?? (_tbUserRoles = CreateObjectSet<tbUserRole>("tbUserRoles")); }
        }
        private ObjectSet<tbUserRole> _tbUserRoles;
    
        public ObjectSet<VRolePermission> VRolePermissions
        {
            get { return _vRolePermissions  ?? (_vRolePermissions = CreateObjectSet<VRolePermission>("VRolePermissions")); }
        }
        private ObjectSet<VRolePermission> _vRolePermissions;
    
        public ObjectSet<tbPermission> tbPermissions
        {
            get { return _tbPermissions  ?? (_tbPermissions = CreateObjectSet<tbPermission>("tbPermissions")); }
        }
        private ObjectSet<tbPermission> _tbPermissions;
    
        public ObjectSet<tbOperateLog> tbOperateLogs
        {
            get { return _tbOperateLogs  ?? (_tbOperateLogs = CreateObjectSet<tbOperateLog>("tbOperateLogs")); }
        }
        private ObjectSet<tbOperateLog> _tbOperateLogs;
    
        public ObjectSet<VRoleMenuPermission> VRoleMenuPermissions
        {
            get { return _vRoleMenuPermissions  ?? (_vRoleMenuPermissions = CreateObjectSet<VRoleMenuPermission>("VRoleMenuPermissions")); }
        }
        private ObjectSet<VRoleMenuPermission> _vRoleMenuPermissions;
    
        public ObjectSet<VRoleModulePermission> VRoleModulePermissions
        {
            get { return _vRoleModulePermissions  ?? (_vRoleModulePermissions = CreateObjectSet<VRoleModulePermission>("VRoleModulePermissions")); }
        }
        private ObjectSet<VRoleModulePermission> _vRoleModulePermissions;
    
        public ObjectSet<VModulePermission> VModulePermissions
        {
            get { return _vModulePermissions  ?? (_vModulePermissions = CreateObjectSet<VModulePermission>("VModulePermissions")); }
        }
        private ObjectSet<VModulePermission> _vModulePermissions;
    
        public ObjectSet<VRoleGrantPermission> VRoleGrantPermissions
        {
            get { return _vRoleGrantPermissions  ?? (_vRoleGrantPermissions = CreateObjectSet<VRoleGrantPermission>("VRoleGrantPermissions")); }
        }
        private ObjectSet<VRoleGrantPermission> _vRoleGrantPermissions;

        #endregion
    }
}
