@model BigData.TeamTools.Models.UFUser
<script>
    function onSuccess(result) {
        if (result.State) {
            showUsersList();
            $('#resourceWindow').jqxWindow('close');
        }
        else
        {
            alert("资源保存失败，请检查您输入的数据有效性！");
        }
    }
</script>

@using (Ajax.BeginForm("Edit", "UserManager", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Code)
        @Html.HiddenFor(model => model.IsSuperUser)
        @Html.HiddenFor(model => model.Password)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsPassed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsPassed, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsPassed, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <input type="submit" value="保  存" class="btn btn-default" style="position:absolute; left:50%;bottom:15px; margin-left:-40px;width:80px;" />
}