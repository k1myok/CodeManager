@model BigData.ModelBuilding.Models.BuildingModel

<script type="text/javascript">
    var code = '@(Model.ModelCode)';
    var codeKey='@(Model.Code)'
    $(document).ready(function () {
        var code = $("#ModelCode").val();
        ShowFilesInfo(code);
        $("#ModelCode").change(function () {
            var code = $("#ModelCode").val();
            ShowFilesInfo(code);
        });
    });
    function ShowFilesInfo(code)
    {
        $("#load").show();
        var url = "../ModelBuilding/FilesInfo?code=" + code;
        $.ajax({
            url: url,
            success: function (data) {
                $("#fieldsInfo").empty().html(data);
                ShowTableFieldInfo();
            },
            complete: function () {
                $("#load").hide();
            }
        });
    }

    function ShowTableFieldInfo() {
        var SourceName = $("#SourceName").val();
        var url = "../ModelBuilding/GetFieldInformation?SourceName=" + SourceName;
        $.ajax({
            url: url,
            success: function (data) {
                $("#tableInformation").empty().html(data);
            },
            error: function ()
            { },
        })
    }
    function success(result) {
        if (result.State) {
            alert("更新成功");
            $('#resourceWindow').jqxWindow('close');
        }
        else {
            alert("资源保存失败，请检查您输入的数据有效性！");
        }
    }
    $("#SourceTypeText").change(function() {
        var SourceType = $("#SourceTypeText").val();
        var url = "../ModelBuilding/GetTableName?SourceType=" + SourceType + "&code=" + codeKey;
        $.ajax({
            url: url,
            success: function (data) {
                $("#SourceName").empty().html(data);
            },
            error: function ()
            { },
        });
    });
    function DeleteBasicInfoModel(code) {
        var url = "../ModelBuilding/DeleteBasicInfoModel?code=" + code;
        $.ajax({
            url: url,
            success: function (data) {
                if (data.State) {
                    alert("删除成功");
                    onMenuClick('../ModelBuilding/BMList')
                }
                else {
                    alert("数据删除失败，请稍后重试！");
                }
            },
            error: function () {

                alert("删除失败")
            },
            complete: function () {
            }
        });
    }
    function SwitchPanel(type) {
        switch (type) {
            case 1:
                $("#baseInfo").css("display", "");
                $("#modelInfo").css("display", "none");
                $("#fieldsInfo").css("display", "none")

                break;
            case 2:
                $("#baseInfo").css("display", "none");
                $("#modelInfo").css("display", "");
                $("#fieldsInfo").css("display", "none")
                this.className = "active"
                break;
            case 3:
                $("#baseInfo").css("display", "none");
                $("#modelInfo").css("display", "none");
                $("#fieldsInfo").css("display", "")
                break;
        }
    }

    //jmzhang code 
    $("#SourceName").change(function () {
        var SourceName = $("#SourceName").val();
        var url = "../ModelBuilding/GetFieldInformation?SourceName=" + SourceName;
        $.ajax({
            url: url,
            success: function (data) {
                $("#tableInformation").empty().html(data);
            },
            error: function ()
            { },
        })
    });

</script>
<div class="NavWindow">
    <div class="NavHeader">
        <img src="~/Images/home.png" />
        <span>您当前的位置：系统建模 &gt; 模型编辑</span>
        <div class="HImgToolbar">  
        </div>
        <div style="float:right;">
            @*<div class="UFButton" onclick="onMenuClick('../ModelBuilding/List')">返回</div>*@
            <button class="btn btn-default" style="width:80px;top:95px;" type="submit" onclick="">保存</button>
            <button class="btn btn-default" style="width:80px;top:95px;" onclick="onMenuClick('../ModelBuilding/List')">返回</button> 
    </div>
    </div>
    <div class="NavContent" style="height:100%">
        <div class="Content" style="height:100%">
            <ul id="infoTabs" class="nav nav-tabs">
                <li class="active">
                    <a onclick="SwitchPanel(1)" data-toggle="tab">
                        基本信息
                    </a>
                </li>
                <li>
                    <a onclick="SwitchPanel(2)" data-toggle="tab">模型信息</a>
                </li>
                <li>
                    <a onclick="SwitchPanel(3)" data-toggle="tab">字段信息</a>
                </li>
            </ul>
            <div class="tab-content">
                <div style="padding:10px;" id="basicInfo" class="tab-pane fade in active">
                    @using (Ajax.BeginForm("EditBasicInfoModel", "ModelBuilding", new AjaxOptions { HttpMethod = "POST", OnSuccess = "success" }))
                    {
                        <div class="form-horizontal" style="margin-top:10px;">
                            <div id="baseInfo" style="display:block;height:400px;">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Description)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CreateDate)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UpdateDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UpdateDate)
                                    </div>
                                </div>
                                @Html.HiddenFor(model => model.Code)
                            </div>
                            <div id="modelInfo" style="display:none;height:400px;">
                                <div class="form-group">
                                    <label class="control-label col-md-2">分析模型</label>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.ModelCode, ViewBag.SystemModelSource as IEnumerable<SelectListItem>, htmlAttributes: new { @style = "width:300px;height:32px;" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SourceType, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.SourceTypeText, ViewBag.SourceType as IEnumerable<SelectListItem>, htmlAttributes: new { @style = "width:300px;height:32px;" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SourceName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.SourceName, ViewBag.SourceNameList as IEnumerable<SelectListItem>, htmlAttributes: new { @style = "width:300px;height:32px;" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OutputType, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.OutputType, ViewBag.OutputTypeList as IEnumerable<SelectListItem>, htmlAttributes: new { @style = "width:300px;height:32px;" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OutputName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.OutputName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.WhereCaluse, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.WhereCaluse)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OrderFields, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.OrderFields)
                                    </div>
                                </div>
                                
                            </div>
                           
                        </div>
                      @*<input type="submit" value="保存" class="btn btn-default" style="position:absolute;float:left;margin-left:65%;width:80px;top:105px;" />*@
                    }
                    <div id="fieldsInfo" style="display:none;">
                    </div>
                </div>
                @*<input type="button" value="返回" class="btn btn-default" onclick="onMenuClick('../ModelBuilding/List')" style="position:absolute;float:left;margin-left:73%;width:80px;top:105px;" />*@
            </div>
        </div>
    </div>
    










































    @*<table class="UFTable">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Description)</th>
                <th>@Html.DisplayNameFor(model => model.CreateDate)</th>
                <th>@Html.DisplayNameFor(model => model.UpdateDate)</th>
                <th>@Html.DisplayNameFor(model => model.SourceName)</th>
                <th>@Html.DisplayNameFor(model => model.OutputName)</th>
                <th>@Html.DisplayNameFor(model => model.WhereCaluse)</th>
                <th>@Html.DisplayNameFor(model => model.OrderFields)</th>
            </tr>
            @foreach (var item in Model)
            {
                @*<tr style="border:1px">
                    <th>@item.Name</th>
                    <th>@item.Description</th>
                    <th>@item.CreateDate</th>
                    <th>@item.UpdateDate</th>
                    <th>@item.SourceName</th>
                    <th>@item.OutputName</th>
                    <th>@item.WhereCaluse</th>
                    <th>@item.OrderFields</th>
                </tr>
              <tr>
                  <th>@Html.DisplayFor(modelitem => item.Name)</th>
                  <th>@Html.DisplayFor(modelitem => item.Description)</th>
                  <th>@Html.DisplayFor(modelitem => item.CreateDate)</th>
                  <th>@Html.DisplayFor(modelitem => item.UpdateDate)</th>
                  <th>@Html.DisplayFor(modelitem => item.SourceName)</th>
                  <th>@Html.DisplayFor(modelitem => item.OutputName)</th>
                  <th>@Html.DisplayFor(modelitem => item.WhereCaluse)</th>
                  <th>@Html.DisplayFor(modelitem => item.OrderFields)</th>
              </tr>
                <tr>
                    <th>@Html.EditorFor(modelitem => item.Name)</th>
                    <th>@Html.DisplayFor(modelitem => item.Description)</th>
                    <th>@Html.EditorFor(model=>item.CreateDate)</th>
                    <th>@Html.EditorFor(model => item.UpdateDate)</th>
                    <th>@Html.EditorFor(model => item.SourceName)</th>
                    <th>@Html.EditorFor(model => item.OutputName)</th>
                    <th>@Html.EditorFor(model => item.WhereCaluse)</th>
                    <th>@Html.EditorFor(model => item.OrderFields)</th>
                </tr>
            }
        </table>*@
    @*<div class="UFTable">
        @using (Ajax.BeginForm("", "", new AjaxOptions { }))
        {
            foreach (var item in Model)
            {
                <div class="UFTable">
                    <div class="form-group">
                        @Html.DisplayNameFor(model => model.Name)
                        @*<div class="col-md-10">
                        @Html.EditorFor(modelitem => item.Name)
                        @*</div>
                    </div>
                    <div class="form-group">
                        @Html.DisplayNameFor(model => model.Description)
                        @*<div class="col-md-10">
                        @Html.EditorFor(modelitem => item.Description)
                        @*</div>
                    </div>
                    <div class="form-group">
                        @Html.DisplayNameFor(model => model.CreateDate)
                        @*<div class="col-md-10">
                        @Html.EditorFor(modelitem => item.CreateDate)
                        @*</div>
                    </div>
                    <div class="form-group">
                        @Html.DisplayNameFor(model => model.UpdateDate)
                        @*<div class="col-md-10">
                        @Html.EditorFor(modelitem => item.UpdateDate)
                        @*</div>
                    </div>
                    <div class="form-group">
                        @Html.DisplayNameFor(model => model.SourceName)
                        @*<div class="col-md-10">
                        @Html.EditorFor(modelitem => item.SourceName)
                        @*</div>
                    </div>
                    <div class="form-group">
                        @Html.DisplayNameFor(model => model.OutputName)
                        @*<div class="col-md-10">
                        @Html.EditorFor(modelitem => item.OutputName)
                        @*</div>
                    </div>
                    <div class="form-group">
                        @Html.DisplayNameFor(model => model.WhereCaluse)
                        @*<div class="col-md-10">
                        @Html.EditorFor(modelitem => item.WhereCaluse)
                        @*</div>
                    </div>
                    <div class="form-group">
                        @Html.DisplayNameFor(model => model.OrderFields)
                        @*<div class="col-md-10">
                        @Html.EditorFor(modelitem => item.OrderFields)
                        @*</div>
                    </div>
                </div>
            <input type="submit" value="保  存" class="btn btn-default" style="position:absolute; left:50%;bottom:15px; margin-left:-40px;width:80px;" />
            }
        }
        </div>*@


